{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation 2\\\\MERN\\\\Client\\\\shortener\\\\src\\\\Components\\\\Dashboard\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Navbar.css\";\nimport CreateModal from \"./Modals/CreateModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [userName, setUserName] = useState('');\n\n  // Fetch username from localStorage when the component mounts\n  useEffect(() => {\n    const storedName = localStorage.getItem('userName');\n    console.log('Fetched userName from localStorage:', storedName); // Check if the value is correct\n    if (storedName) {\n      setUserName(storedName);\n    } else {\n      console.log(\"User name not found in localStorage\");\n    }\n  }, []);\n  const getGreeting = () => {\n    const hour = new Date().getHours();\n    if (hour < 12) return \"🌄 Good morning\";else if (hour < 18) return \"☀️ Good afternoon\";else return \"🌙 Good evening\";\n  };\n  const getFormattedDate = () => {\n    const today = new Date();\n    const options = {\n      weekday: \"short\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return today.toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"greeting\",\n          children: `${getGreeting()}, ${userName || 'Guest'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"date\",\n            children: getFormattedDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-button\",\n          onClick: () => setModalOpen(true),\n          children: \"+ Create new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by remarks\",\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-icon\",\n          children: userName ? userName.split(' ').length > 1 ? userName.split(' ')[0].charAt(0).toUpperCase() + userName.split(' ')[1].charAt(0).toUpperCase() : userName.charAt(0).toUpperCase() + userName.charAt(userName.length - 1).toUpperCase() : 'G'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Navbar, \"v1M6RebXzCUqULjnXJbmydIh+iw=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","CreateModal","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","isModalOpen","setModalOpen","userName","setUserName","storedName","localStorage","getItem","console","log","getGreeting","hour","Date","getHours","getFormattedDate","today","options","weekday","month","day","toLocaleDateString","undefined","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","split","length","charAt","toUpperCase","isOpen","onClose","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation 2/MERN/Client/shortener/src/Components/Dashboard/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport CreateModal from \"./Modals/CreateModal\";\r\n\r\nconst Navbar = () => {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [userName, setUserName] = useState('');\r\n\r\n  // Fetch username from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedName = localStorage.getItem('userName');\r\n    console.log('Fetched userName from localStorage:', storedName); // Check if the value is correct\r\n    if (storedName) {\r\n      setUserName(storedName);\r\n    } else {\r\n      console.log(\"User name not found in localStorage\");\r\n    }\r\n  }, []);\r\n  \r\n  \r\n\r\n  const getGreeting = () => {\r\n    const hour = new Date().getHours();\r\n    if (hour < 12) return \"🌄 Good morning\";\r\n    else if (hour < 18) return \"☀️ Good afternoon\";\r\n    else return \"🌙 Good evening\";\r\n  };\r\n\r\n  const getFormattedDate = () => {\r\n    const today = new Date();\r\n    const options = { weekday: \"short\", month: \"short\", day: \"numeric\" };\r\n    return today.toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-left\">\r\n          <span className=\"greeting\">\r\n            {`${getGreeting()}, ${userName || 'Guest'}`}\r\n          </span>\r\n          <div className=\"day\">\r\n            <span className=\"date\">{getFormattedDate()}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-right\">\r\n          <button\r\n            className=\"create-button\"\r\n            onClick={() => setModalOpen(true)}\r\n          >\r\n            + Create new\r\n          </button>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by remarks\"\r\n            className=\"search-input\"\r\n          />\r\n          <div className=\"profile-icon\">\r\n            {/* Display user's first letter if username is available, otherwise 'G' for guest */}\r\n            {\r\n  userName\r\n    ? userName.split(' ').length > 1\r\n      ? userName.split(' ')[0].charAt(0).toUpperCase() + userName.split(' ')[1].charAt(0).toUpperCase()\r\n      : userName.charAt(0).toUpperCase() + userName.charAt(userName.length - 1).toUpperCase()\r\n    : 'G'\r\n}\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Modal Component */}\r\n      <CreateModal isOpen={isModalOpen} onClose={() => setModalOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}