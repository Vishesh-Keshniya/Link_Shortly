{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation 2\\\\MERN\\\\Client\\\\shortener\\\\src\\\\Components\\\\Dashboard\\\\Modals\\\\Dashpart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashpart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashpart() {\n  _s();\n  const [totalClicks, setTotalClicks] = useState(0);\n  const [deviceClicks, setDeviceClicks] = useState({\n    desktop: 0,\n    mobile: 0,\n    tablet: 0\n  });\n  const [dateWiseClicks, setDateWiseClicks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchClickStats = async () => {\n      const token = localStorage.getItem(\"authToken\");\n      if (!token) {\n        setError(\"User is not authenticated.\");\n        return;\n      }\n      try {\n        const response = await axios.get(\"http://localhost:4000/api/dash-clicks\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const {\n          totalClicks,\n          deviceClicks,\n          dateWiseClicks\n        } = response.data;\n        setTotalClicks(totalClicks || 0);\n        setDeviceClicks(deviceClicks || {\n          desktop: 0,\n          mobile: 0,\n          tablet: 0\n        });\n\n        // Group dateWiseClicks by date to avoid duplicates and sum the click counts for each date\n        const groupedClicks = dateWiseClicks.reduce((acc, entry) => {\n          const date = new Date(entry.date).toLocaleDateString();\n          if (!acc[date]) {\n            acc[date] = 0;\n          }\n          acc[date] += entry.clickCount;\n          return acc;\n        }, {});\n\n        // Convert grouped object back to an array of objects\n        const groupedClicksArray = Object.entries(groupedClicks).map(([date, clickCount]) => ({\n          date,\n          clickCount\n        }));\n        setDateWiseClicks(groupedClicksArray || []);\n      } catch (error) {\n        console.error(\"Error fetching click stats:\", error);\n        setError(\"Failed to fetch click statistics. Please try again.\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchClickStats();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashpart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Clicks \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"total\",\n          children: [\" \", totalClicks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashpart-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Date-wise Clicks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-clicks-list\",\n          children: dateWiseClicks.length > 0 ? dateWiseClicks.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date-clicks-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: entry.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"click-bar\",\n              style: {\n                width: `${entry.clickCount / totalClicks * 10}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bar-label\",\n              children: entry.clickCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Click Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"device-clicks-list\",\n          children: Object.entries(deviceClicks).map(([device, clicks]) => {\n            // Only show device click bars when the click count is more than 0\n            if (clicks > 0) {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"device-clicks-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: device.charAt(0).toUpperCase() + device.slice(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"click-bar-device\",\n                  style: {\n                    width: `${clicks / totalClicks * 100}%` // Use percentage for width based on total clicks\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"bar-label\",\n                  children: clicks\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this)]\n              }, device, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this);\n            }\n            return null; // If clicks are 0, return null to skip rendering\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashpart, \"kNrIocOkwrem0nX8kDRfJX2A0rA=\");\n_c = Dashpart;\nexport default Dashpart;\nvar _c;\n$RefreshReg$(_c, \"Dashpart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashpart","_s","totalClicks","setTotalClicks","deviceClicks","setDeviceClicks","desktop","mobile","tablet","dateWiseClicks","setDateWiseClicks","isLoading","setIsLoading","error","setError","fetchClickStats","token","localStorage","getItem","response","get","headers","Authorization","data","groupedClicks","reduce","acc","entry","date","Date","toLocaleDateString","clickCount","groupedClicksArray","Object","entries","map","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","style","width","device","clicks","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation 2/MERN/Client/shortener/src/Components/Dashboard/Modals/Dashpart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Dashpart.css\";\r\n\r\nfunction Dashpart() {\r\n  const [totalClicks, setTotalClicks] = useState(0);\r\n  const [deviceClicks, setDeviceClicks] = useState({\r\n    desktop: 0,\r\n    mobile: 0,\r\n    tablet: 0,\r\n  });\r\n  const [dateWiseClicks, setDateWiseClicks] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchClickStats = async () => {\r\n      const token = localStorage.getItem(\"authToken\");\r\n      if (!token) {\r\n        setError(\"User is not authenticated.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\"http://localhost:4000/api/dash-clicks\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const { totalClicks, deviceClicks, dateWiseClicks } = response.data;\r\n\r\n        setTotalClicks(totalClicks || 0);\r\n        setDeviceClicks(deviceClicks || { desktop: 0, mobile: 0, tablet: 0 });\r\n\r\n        // Group dateWiseClicks by date to avoid duplicates and sum the click counts for each date\r\n        const groupedClicks = dateWiseClicks.reduce((acc, entry) => {\r\n          const date = new Date(entry.date).toLocaleDateString();\r\n          if (!acc[date]) {\r\n            acc[date] = 0;\r\n          }\r\n          acc[date] += entry.clickCount;\r\n          return acc;\r\n        }, {});\r\n\r\n        // Convert grouped object back to an array of objects\r\n        const groupedClicksArray = Object.entries(groupedClicks).map(([date, clickCount]) => ({\r\n          date,\r\n          clickCount,\r\n        }));\r\n\r\n        setDateWiseClicks(groupedClicksArray || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching click stats:\", error);\r\n        setError(\"Failed to fetch click statistics. Please try again.\");\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchClickStats();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashpart-container\">\r\n      {/* Total Clicks */}\r\n      <div>\r\n        <h2>Total Clicks <span className=\"total\"> {totalClicks}</span></h2>\r\n      </div>\r\n\r\n      <div className=\"dashpart-stats\">\r\n        {/* Date-wise Clicks */}\r\n        <div className=\"stats-card\">\r\n          <h3>Date-wise Clicks</h3>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <div className=\"date-clicks-list\">\r\n              {dateWiseClicks.length > 0 ? (\r\n                dateWiseClicks.map((entry, index) => (\r\n                  <div key={index} className=\"date-clicks-item\">\r\n                    <span>{entry.date}</span>\r\n                    <div\r\n                      className=\"click-bar\"\r\n                      style={{\r\n                        width: `${(entry.clickCount / totalClicks) * 10}%`,\r\n                      }}\r\n                    />\r\n                    <span className=\"bar-label\">{entry.clickCount}</span>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No data available.</p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Device Clicks with Bars */}\r\n        <div className=\"stats-card\">\r\n          <h3>Click Devices</h3>\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <div className=\"device-clicks-list\">\r\n              {Object.entries(deviceClicks).map(([device, clicks]) => {\r\n                // Only show device click bars when the click count is more than 0\r\n                if (clicks > 0) {\r\n                  return (\r\n                    <div key={device} className=\"device-clicks-item\">\r\n                      <span>{device.charAt(0).toUpperCase() + device.slice(1)}</span>\r\n                      <div\r\n                        className=\"click-bar-device\"\r\n                        style={{\r\n                          width: `${(clicks / totalClicks) * 100}%`, // Use percentage for width based on total clicks\r\n                        }}\r\n                      />\r\n                      <span className=\"bar-label\">{clicks}</span>\r\n                    </div>\r\n                  );\r\n                }\r\n                return null; // If clicks are 0, return null to skip rendering\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashpart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}