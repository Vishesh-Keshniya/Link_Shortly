{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cuvette\\\\Final evaluation 2\\\\MERN\\\\Client\\\\shortener\\\\src\\\\Components\\\\Dashboard\\\\Modals\\\\Data.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Data.css';\nimport EditModal from './EditModal'; // Import the EditModal component\nimport DeleteModal from \"./DeleteModal\"; // Import the DeleteModal component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Data() {\n  _s();\n  const [links, setLinks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedLink, setSelectedLink] = useState(null); // State for modal\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\n  const linksPerPage = 7; // Number of links per page (changed from 9 to 7)\n  const [deleteLink, setDeleteLink] = useState(null); // State for delete modal\n\n  // Fetch data from the backend\n  useEffect(() => {\n    const fetchLinks = async () => {\n      const token = localStorage.getItem('authToken'); // Assuming you store the JWT token in localStorage\n\n      if (!token) {\n        console.error('User is not authenticated');\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:4000/api/get-links', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLinks(response.data.links);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching links:', error);\n      }\n    };\n    fetchLinks();\n  }, []);\n\n  // Function to display only the first 10 characters of the URL\n  const getShortenedLink = url => {\n    return url.slice(0, 10) + '...'; // Get first 10 characters and add '...'\n  };\n\n  // Function to copy short link to clipboard and increment click count\n  const copyToClipboard = (shortUrl, index) => {\n    navigator.clipboard.writeText(shortUrl).then(() => {\n      alert('Short link copied to clipboard!');\n      handleLinkClick(shortUrl, index); // Call handleLinkClick after copying\n    }).catch(error => {\n      console.error('Error copying to clipboard', error);\n    });\n  };\n\n  // Function to increment click count\n  const handleLinkClick = async (shortUrl, index) => {\n    try {\n      const encodedShortUrl = encodeURIComponent(shortUrl);\n      const response = await axios.get(`http://localhost:4000/api/increment-clicks/${encodedShortUrl}`);\n      const updatedLinks = [...links];\n      updatedLinks[index].clicks.total = response.data.totalClicks;\n      setLinks(updatedLinks);\n    } catch (error) {\n      console.error('Error incrementing click count:', error);\n    }\n  };\n  const handleLinkUpdate = updatedLink => {\n    const updatedLinks = links.map(link => link._id === updatedLink._id ? updatedLink : link);\n    setLinks(updatedLinks);\n  };\n  const handleDeleteConfirm = async () => {\n    if (!deleteLink) return;\n    try {\n      const response = await axios.delete(`http://localhost:4000/api/delete-link/${deleteLink._id}`);\n      if (response.status === 200) {\n        setLinks(links.filter(link => link._id !== deleteLink._id));\n        setDeleteLink(null); // Close modal after deletion\n        alert(\"Link deleted successfully!\");\n      }\n    } catch (error) {\n      console.error(\"Error deleting link:\", error);\n    }\n  };\n\n  // Function to check link expiry status\n  const getLinkStatus = expiryDate => {\n    const currentDate = new Date();\n    const expiry = new Date(expiryDate);\n    if (expiry < currentDate) {\n      return 'Inactive';\n    }\n    const timeDifference = expiry - currentDate;\n    const oneDayInMillis = 24 * 60 * 60 * 1000;\n    if (timeDifference <= oneDayInMillis) {\n      return 'Expiring Soon';\n    }\n    return 'Active';\n  };\n\n  // Handle page change\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  // Paginate links based on the current page\n  const indexOfLastLink = currentPage * linksPerPage;\n  const indexOfFirstLink = indexOfLastLink - linksPerPage;\n  const currentLinks = links.slice(indexOfFirstLink, indexOfLastLink);\n\n  // Function to open the modal\n  const openModal = link => {\n    setSelectedLink(link); // Set the selected link to open in modal\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setSelectedLink(null); // Reset the selected link when modal is closed\n  };\n\n  // Pagination logic\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(links.length / linksPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-header\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Original Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Short Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Remarks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Clicks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-body\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : currentLinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"data-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: new Date(link.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link.destinationUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: getShortenedLink(link.destinationUrl)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: link.shortUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            onClick: () => handleLinkClick(link.shortUrl, index),\n            children: getShortenedLink(link.shortUrl)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"copy\",\n            onClick: () => copyToClipboard(link.shortUrl, index),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"copy.png\",\n              alt: \"Copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: link.remarks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"count\",\n          children: link.clicks.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"status\",\n          children: getLinkStatus(link.expiryDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"action-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit\",\n            onClick: () => openModal(link),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"edit.png\",\n              alt: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            onClick: () => setDeleteLink(link),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"delete.png\",\n              alt: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(number),\n        className: currentPage === number ? 'active' : '',\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditModal, {\n      isOpen: selectedLink !== null,\n      onClose: closeModal,\n      link: selectedLink,\n      onUpdate: handleLinkUpdate // Pass the handleLinkUpdate function as a prop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), deleteLink && /*#__PURE__*/_jsxDEV(DeleteModal, {\n      onClose: () => setDeleteLink(null),\n      onConfirm: handleDeleteConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(Data, \"5A1V7qEmb+6cQo84Q7bW7G1aKgA=\");\n_c = Data;\nexport default Data;\nvar _c;\n$RefreshReg$(_c, \"Data\");","map":{"version":3,"names":["React","useState","useEffect","axios","EditModal","DeleteModal","jsxDEV","_jsxDEV","Data","_s","links","setLinks","isLoading","setIsLoading","selectedLink","setSelectedLink","currentPage","setCurrentPage","linksPerPage","deleteLink","setDeleteLink","fetchLinks","token","localStorage","getItem","console","error","response","get","headers","Authorization","data","getShortenedLink","url","slice","copyToClipboard","shortUrl","index","navigator","clipboard","writeText","then","alert","handleLinkClick","catch","encodedShortUrl","encodeURIComponent","updatedLinks","clicks","total","totalClicks","handleLinkUpdate","updatedLink","map","link","_id","handleDeleteConfirm","delete","status","filter","getLinkStatus","expiryDate","currentDate","Date","expiry","timeDifference","oneDayInMillis","handlePageChange","pageNumber","indexOfLastLink","indexOfFirstLink","currentLinks","openModal","closeModal","pageNumbers","i","Math","ceil","length","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","createdAt","toLocaleString","href","destinationUrl","target","rel","onClick","src","alt","remarks","number","isOpen","onClose","onUpdate","onConfirm","_c","$RefreshReg$"],"sources":["D:/Cuvette/Final evaluation 2/MERN/Client/shortener/src/Components/Dashboard/Modals/Data.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Data.css';\r\nimport EditModal from './EditModal'; // Import the EditModal component\r\nimport DeleteModal from \"./DeleteModal\"; // Import the DeleteModal component\r\n\r\nfunction Data() {\r\n  const [links, setLinks] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedLink, setSelectedLink] = useState(null); // State for modal\r\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\r\n  const linksPerPage = 7; // Number of links per page (changed from 9 to 7)\r\n   const [deleteLink, setDeleteLink] = useState(null); // State for delete modal\r\n\r\n  // Fetch data from the backend\r\n  useEffect(() => {\r\n    const fetchLinks = async () => {\r\n      const token = localStorage.getItem('authToken'); // Assuming you store the JWT token in localStorage\r\n\r\n      if (!token) {\r\n        console.error('User is not authenticated');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/api/get-links', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setLinks(response.data.links);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching links:', error);\r\n      }\r\n    };\r\n\r\n    fetchLinks();\r\n  }, []);\r\n\r\n  // Function to display only the first 10 characters of the URL\r\n  const getShortenedLink = (url) => {\r\n    return url.slice(0, 10) + '...'; // Get first 10 characters and add '...'\r\n  };\r\n\r\n  // Function to copy short link to clipboard and increment click count\r\n  const copyToClipboard = (shortUrl, index) => {\r\n    navigator.clipboard.writeText(shortUrl)\r\n      .then(() => {\r\n        alert('Short link copied to clipboard!');\r\n        handleLinkClick(shortUrl, index); // Call handleLinkClick after copying\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error copying to clipboard', error);\r\n      });\r\n  };\r\n\r\n  // Function to increment click count\r\n  const handleLinkClick = async (shortUrl, index) => {\r\n    try {\r\n      const encodedShortUrl = encodeURIComponent(shortUrl);\r\n      const response = await axios.get(`http://localhost:4000/api/increment-clicks/${encodedShortUrl}`);\r\n\r\n      const updatedLinks = [...links];\r\n      updatedLinks[index].clicks.total = response.data.totalClicks;\r\n      setLinks(updatedLinks);\r\n    } catch (error) {\r\n      console.error('Error incrementing click count:', error);\r\n    }\r\n  };\r\n\r\n  const handleLinkUpdate = (updatedLink) => {\r\n    const updatedLinks = links.map((link) =>\r\n      link._id === updatedLink._id ? updatedLink : link\r\n    );\r\n    setLinks(updatedLinks);\r\n  };\r\n\r\n\r\n   const handleDeleteConfirm = async () => {\r\n    if (!deleteLink) return;\r\n\r\n    try {\r\n      const response = await axios.delete(\r\n        `http://localhost:4000/api/delete-link/${deleteLink._id}`\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        setLinks(links.filter((link) => link._id !== deleteLink._id));\r\n        setDeleteLink(null); // Close modal after deletion\r\n        alert(\"Link deleted successfully!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting link:\", error);\r\n    }\r\n  };\r\n\r\n  // Function to check link expiry status\r\n  const getLinkStatus = (expiryDate) => {\r\n    const currentDate = new Date();\r\n    const expiry = new Date(expiryDate);\r\n  \r\n    if (expiry < currentDate) {\r\n      return 'Inactive';\r\n    }\r\n  \r\n    const timeDifference = expiry - currentDate;\r\n    const oneDayInMillis = 24 * 60 * 60 * 1000;\r\n    if (timeDifference <= oneDayInMillis) {\r\n      return 'Expiring Soon';\r\n    }\r\n  \r\n    return 'Active';\r\n  };\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Paginate links based on the current page\r\n  const indexOfLastLink = currentPage * linksPerPage;\r\n  const indexOfFirstLink = indexOfLastLink - linksPerPage;\r\n  const currentLinks = links.slice(indexOfFirstLink, indexOfLastLink);\r\n\r\n  // Function to open the modal\r\n  const openModal = (link) => {\r\n    setSelectedLink(link); // Set the selected link to open in modal\r\n  };\r\n\r\n  // Function to close the modal\r\n  const closeModal = () => {\r\n    setSelectedLink(null); // Reset the selected link when modal is closed\r\n  };\r\n\r\n  // Pagination logic\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(links.length / linksPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"data-container\">\r\n      {/* Table Header */}\r\n      <div className=\"table-header\">\r\n        <ul className=\"data-table\">\r\n          <li>Date</li>\r\n          <li>Original Link</li>\r\n          <li>Short Link</li>\r\n          <li>Remarks</li>\r\n          <li>Clicks</li>\r\n          <li>Status</li>\r\n          <li>Action</li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Table Rows */}\r\n      <div className=\"table-body\">\r\n        {isLoading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          currentLinks.map((link, index) => (\r\n            <ul className=\"data-row\" key={index}>\r\n              <li>{new Date(link.createdAt).toLocaleString()}</li>\r\n              <li>\r\n                <a href={link.destinationUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {getShortenedLink(link.destinationUrl)}\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a\r\n                  href={link.shortUrl}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                  onClick={() => handleLinkClick(link.shortUrl, index)}\r\n                >\r\n                  {getShortenedLink(link.shortUrl)}\r\n                </a>\r\n                <button className=\"copy\" onClick={() => copyToClipboard(link.shortUrl, index)}>\r\n                  <img src=\"copy.png\" alt=\"Copy\" />\r\n                </button>\r\n              </li>\r\n              <li>{link.remarks}</li>\r\n              <li className=\"count\">{link.clicks.total}</li>\r\n              <li className='status'>\r\n                {getLinkStatus(link.expiryDate)}\r\n              </li>\r\n              <li className=\"action-icons\">\r\n                <button className='edit' onClick={() => openModal(link)}>\r\n                  <img src=\"edit.png\" alt=\"Edit\" />\r\n                </button>\r\n               <button\r\n                  className=\"delete\"\r\n                  onClick={() => setDeleteLink(link)}\r\n                >\r\n                  <img src=\"delete.png\" alt=\"Delete\" />\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"pagination\">\r\n        {pageNumbers.map(number => (\r\n          <button\r\n            key={number}\r\n            onClick={() => handlePageChange(number)}\r\n            className={currentPage === number ? 'active' : ''}\r\n          >\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Edit Modal */}\r\n      <EditModal\r\n      isOpen={selectedLink !== null}\r\n      onClose={closeModal}\r\n      link={selectedLink}\r\n      onUpdate={handleLinkUpdate} // Pass the handleLinkUpdate function as a prop\r\n    />\r\n\r\n      {/* Delete Modal */}\r\n      {deleteLink && (\r\n        <DeleteModal\r\n          onClose={() => setDeleteLink(null)}\r\n          onConfirm={handleDeleteConfirm}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Data;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}